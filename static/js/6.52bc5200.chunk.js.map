{"version":3,"sources":["../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js","Pages/Setting.jsx"],"names":["Row","React","forwardRef","props","ref","bsPrefix","noGutters","_props$as","as","Component","className","otherProps","_objectWithoutPropertiesLoose","decoratedBsPrefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","defaultProps","DEVICE_SIZES","Col","_ref","_ref$as","prefix","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","length","apply","concat","Setting","useCookies","theme","setTheme","currentTheme","undefined","currPage","useContext","GlobalContext","setCurrentPage","useEffect","onClick","path","type","checked"],"mappings":"mGAAA,2DAQIA,EAAMC,IAAMC,YAAW,SAAUC,EAAOC,GAC1C,IAAIC,EAAWF,EAAME,SACjBC,EAAYH,EAAMG,UAClBC,EAAYJ,EAAMK,GAClBC,OAA0B,IAAdF,EAAuB,MAAQA,EAC3CG,EAAYP,EAAMO,UAClBC,EAAaC,YAA8BT,EAAO,CAAC,WAAY,YAAa,KAAM,cAElFU,EAAoBC,YAAmBT,EAAU,OACrD,OAAOJ,IAAMc,cAAcN,EAAWO,YAAS,CAC7CZ,IAAKA,GACJO,EAAY,CACbD,UAAWO,IAAWP,EAAWG,EAAmBP,GAAa,oBAGrEN,EAAIkB,YAAc,MAClBlB,EAAImB,aAnBe,CACjBb,WAAW,GAmBEN,O,gCCzBf,2DAKIoB,EAAe,CAAC,KAAM,KAAM,KAAM,KAAM,MACxCC,EAAMpB,IAAMC,YAChB,SAAUoB,EAAMlB,GACd,IAAIC,EAAWiB,EAAKjB,SAChBK,EAAYY,EAAKZ,UACjBa,EAAUD,EAAKd,GACfC,OAAwB,IAAZc,EAAqB,MAAQA,EACzCpB,EAAQS,YAA8BU,EAAM,CAAC,WAAY,YAAa,OAEtEE,EAASV,YAAmBT,EAAU,OACtCoB,EAAQ,GACRC,EAAU,GAyBd,OAxBAN,EAAaO,SAAQ,SAAUC,GAC7B,IAEIC,EAAMC,EAAQC,EAFdC,EAAY7B,EAAMyB,GAItB,UAHOzB,EAAMyB,GAGI,MAAbI,GAA0C,kBAAdA,EAAwB,CACtD,IAAIC,EAAkBD,EAAUH,KAChCA,OAA2B,IAApBI,GAAoCA,EAC3CH,EAASE,EAAUF,OACnBC,EAAQC,EAAUD,WAElBF,EAAOG,EAGT,IAAIE,EAAqB,OAAbN,EAAoB,IAAMA,EAAW,GACrC,MAARC,GAAcJ,EAAMU,MAAc,IAATN,EAAgB,GAAKL,EAASU,EAAQ,GAAKV,EAASU,EAAQ,IAAML,GAClF,MAATE,GAAeL,EAAQS,KAAK,QAAUD,EAAQ,IAAMH,GAC1C,MAAVD,GAAgBJ,EAAQS,KAAK,SAAWD,EAAQ,IAAMJ,MAGvDL,EAAMW,QACTX,EAAMU,KAAKX,GAGNvB,IAAMc,cAAcN,EAAWO,YAAS,GAAIb,EAAO,CACxDC,IAAKA,EACLM,UAAWO,IAAWoB,WAAM,EAAQ,CAAC3B,GAAW4B,OAAOb,EAAOC,UAGlEL,EAAIH,YAAc,MACHG,O,kGCLAkB,UApCf,WAAoB,IAAD,EACWC,YAAW,CAAC,UADvB,mBACRC,EADQ,KACDC,EADC,KAETC,OAAyBC,IAAVH,EAAsB,aAAeA,EAAMA,MACzDI,EAAYC,qBAAWC,KAAvBF,SAHQ,cAIuBA,EAJvB,GAIKG,GAJL,WAkBf,OAJAC,qBAAU,WACND,EAAe,cAIf,yBAAKtC,UAAU,aACX,kBAAC,IAAD,CAAKA,UAAU,QACX,kBAAC,IAAD,CAAKA,UAAW,aAAgBiC,GAAhC,aAGA,kBAAC,IAAD,CAAKjC,UAAU,wBACX,2BAAOA,UAAU,UACb,2BAAOwC,QAAS,WAlB5BR,EAAS,aADQE,IAAjBD,GAA+C,eAAjBA,EACZ,YAEA,aAFa,CAACQ,KAAM,OAkBWC,KAAK,WACnCC,QAA2B,cAAjBV,GAAiD,eAAjBA,EAAgC,GAAK,YACtF,0BAAMjC,UAAU","file":"static/js/6.52bc5200.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (props, ref) {\n  var bsPrefix = props.bsPrefix,\n      noGutters = props.noGutters,\n      _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      className = props.className,\n      otherProps = _objectWithoutPropertiesLoose(props, [\"bsPrefix\", \"noGutters\", \"as\", \"className\"]);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, otherProps, {\n    className: classNames(className, decoratedBsPrefix, noGutters && 'no-gutters')\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span, offset, order;\n\n    if (propValue != null && typeof propValue === 'object') {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span != null) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","import React, {useContext, useEffect} from \"react\";\nimport Cookies from \"universal-cookie\";\nimport {useCookies} from \"react-cookie\";\nimport {GlobalContext} from \"../Components/GlobalContext\";\nimport {Col, Row} from \"react-bootstrap\";\n\nfunction Setting() {\n    const [theme, setTheme] = useCookies(['theme']);\n    const currentTheme = theme === undefined ? 'light-mode' : theme.theme;\n    const {currPage} = useContext(GlobalContext);\n    const [currentPage, setCurrentPage] = currPage;\n\n    function changeTheme() {\n        if (currentTheme === undefined || currentTheme === 'light-mode') {\n            setTheme('theme', 'dark-mode', {path: '/'});\n        } else {\n            setTheme('theme', 'light-mode', {path: '/'});\n        }\n    }\n\n    useEffect(() => {\n        setCurrentPage('setting');\n    });\n\n    return (\n        <div className='container'>\n            <Row className='menu'>\n                <Col className={'menu-text ' + (currentTheme)}>\n                    Dark Mode\n                </Col>\n                <Col className='menu-item text-right'>\n                    <label className=\"switch\">\n                        <input onClick={() => changeTheme()} type=\"checkbox\"\n                               checked={(currentTheme === 'undefined' || currentTheme === \"light-mode\" ? '' : 'checked')}/>\n                        <span className=\"slider\"></span>\n                    </label>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default Setting;\n"],"sourceRoot":""}